terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = "~> 4.0"
    }
  }
}

# Configure the AWS Provider
provider "aws" {
  #   region = "ap-southeast-2"
  #   access_key = "AKIASMTKDQS2VWKOKBKX"
  #   secret_key = "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"

}

variable "cidr_blocks" {}
variable "avail_zone" {}


# variable "environment" {
#   type        = string
#   description = "deployment environment"
# }

# variable "subnet_cidr_block" {
#   type = string
#   # default     = "10.0.20.0/24"
#   description = "subnet cidr block"
# }

# variable "vpc_cidr_block" {
#   type = string
#   # default     = "10.0.20.0/24"
#   description = "vpc cidr block"
# }

//from TF_VAR_availability_zone
# variable "availability_zone" {

# }



resource "aws_vpc" "development_vpc" {
  cidr_block = var.vpc_cidr_block //var.cidr_blocks[0].cidr_block
  tags = {
    Name = "vpc-dev"

  }
}

resource "aws_subnet" "dev_subnet_1" {
  vpc_id            = aws_vpc.development_vpc.id
  cidr_block        = var.subnet_cidr_block
  availability_zone = "ap-southeast-2a"
  tags = {
    Name = "subnet1-dev"
  }
}

# data "aws_vpc" "existing_vpc" {
#     default = true
# }

# resource "aws_subnet" "dev_subnet_2"{
#     vpc_id = data.aws_vpc.existing_vpc.id
#     cidr_block = "172.31.48.0/20"
#     availability_zone = "ap-southeast-2a"
#     tags = {
#         Name = "subnet2 -default"
#     }
# }


# output "dev-vpc-id" {
#   value = aws_vpc.development_vpc.id

# }

# output "dev-subnet-id" {
#   value = aws_subnet.dev_subnet_1.id

# }
//-var-file terraform-dev.tfvars 
